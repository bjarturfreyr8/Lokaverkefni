#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9

MFRC522 rfid(SS_PIN, RST_PIN);

String accessGranted = "218137113190"; 
String accessDenied = "1211822195";
int accessGrantedSize = 2;  

const int led = 3;
const int led2 = 6;

void setup() {
  Serial.begin(9600);
  SPI.begin(); // init SPI bus
  rfid.PCD_Init(); // init MFRC522
  Serial.println("Tap RFID/NFC Tag on reader");
  pinMode(3, OUTPUT);
  pinMode(6, OUTPUT);

  
}

void loop() {
  if (rfid.PICC_IsNewCardPresent()) { // new tag is available
    if (rfid.PICC_ReadCardSerial()) { // NUID has been readed
      MFRC522::PICC_Type piccType = rfid.PICC_GetType(rfid.uid.sak);
      //Serial.print("RFID/NFC Tag Type: ");
      //Serial.println(rfid.PICC_GetTypeName(piccType));

      // print NUID in Serial Monitor in the hex format
      Serial.print("UID:");
      String kodi = "";
      for (int i = 0; i < rfid.uid.size; i++) {
        Serial.print(rfid.uid.uidByte[i] < 0x10 ? " 0" : " ");
        Serial.print(rfid.uid.uidByte[i], HEX);
        kodi += rfid.uid.uidByte[i];
      }
      Serial.println();
      Serial.println(kodi);

      if(kodi == accessGranted) {
        Serial.println("Rett kort, gaktu inn");
        digitalWrite(led, HIGH);
        delay(250);
        digitalWrite(led, LOW);
        
      }
     
      if(kodi == accessDenied) {
     
        Serial.println("Vitlaust kort");
        digitalWrite(led2, HIGH);
        delay(250);
        digitalWrite(led2, LOW);
      }

      rfid.PICC_HaltA(); // halt PICC
      rfid.PCD_StopCrypto1(); // stop encryption on PCD
  } 
 }
}
